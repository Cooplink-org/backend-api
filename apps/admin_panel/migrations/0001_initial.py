# Generated by Django 5.2.3 on 2025-06-29 16:10

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('title', models.CharField(default='Site Under Maintenance', max_length=200)),
                ('message', models.TextField(default='We are currently performing maintenance. Please check back soon.')),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('allowed_ips', models.TextField(blank=True, help_text='Comma-separated IP addresses that can access during maintenance')),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_activations', to=settings.AUTH_USER_MODEL)),
                ('deactivated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_deactivations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_maintenance_mode',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('config_type', models.CharField(choices=[('general', 'General Settings'), ('payment', 'Payment Settings'), ('email', 'Email Settings'), ('telegram', 'Telegram Settings'), ('security', 'Security Settings'), ('performance', 'Performance Settings'), ('api', 'API Settings'), ('maintenance', 'Maintenance Settings')], max_length=20)),
                ('value', models.TextField()),
                ('default_value', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_sensitive', models.BooleanField(default=False)),
                ('validation_rules', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_system_config',
                'ordering': ['config_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('overall_status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('critical', 'Critical'), ('down', 'Down')], max_length=10)),
                ('cpu_usage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('memory_usage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('disk_usage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('database_connections', models.PositiveIntegerField(blank=True, null=True)),
                ('database_size_mb', models.PositiveIntegerField(blank=True, null=True)),
                ('slow_queries', models.PositiveIntegerField(blank=True, null=True)),
                ('active_users', models.PositiveIntegerField(blank=True, null=True)),
                ('response_time_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('error_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('payment_gateway_status', models.CharField(default='unknown', max_length=10)),
                ('telegram_bot_status', models.CharField(default='unknown', max_length=10)),
                ('email_service_status', models.CharField(default='unknown', max_length=10)),
                ('issues', models.JSONField(blank=True, default=list)),
            ],
            options={
                'db_table': 'admin_panel_system_health',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='admin_panel_timesta_b2bfb2_idx'), models.Index(fields=['overall_status', 'timestamp'], name='admin_panel_overall_ba680b_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdminAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('user_ban', 'User Ban'), ('user_unban', 'User Unban'), ('user_verify', 'User Verification'), ('project_approve', 'Project Approval'), ('project_reject', 'Project Rejection'), ('project_remove', 'Project Removal'), ('payment_refund', 'Payment Refund'), ('withdrawal_approve', 'Withdrawal Approval'), ('withdrawal_reject', 'Withdrawal Rejection'), ('dispute_resolve', 'Dispute Resolution'), ('news_publish', 'News Publication'), ('system_config', 'System Configuration'), ('bulk_action', 'Bulk Action'), ('data_export', 'Data Export'), ('backup_create', 'Backup Creation'), ('maintenance_mode', 'Maintenance Mode')], max_length=20)),
                ('description', models.TextField()),
                ('reason', models.TextField(blank=True)),
                ('object_type', models.CharField(blank=True, max_length=50)),
                ('object_id', models.CharField(blank=True, max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_actions', to=settings.AUTH_USER_MODEL)),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_actions_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_action',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['admin', 'created_at'], name='admin_panel_admin_i_8f8041_idx'), models.Index(fields=['action_type', 'created_at'], name='admin_panel_action__46e904_idx'), models.Index(fields=['target_user', 'created_at'], name='admin_panel_target__4c9299_idx'), models.Index(fields=['created_at'], name='admin_panel_created_92d2b7_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdminDashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('widget_type', models.CharField(choices=[('stats_card', 'Statistics Card'), ('chart', 'Chart'), ('table', 'Data Table'), ('alert_list', 'Alert List'), ('activity_feed', 'Activity Feed'), ('quick_actions', 'Quick Actions')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('position_x', models.PositiveIntegerField(default=0)),
                ('position_y', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=6)),
                ('height', models.PositiveIntegerField(default=4)),
                ('configuration', models.JSONField(default=dict)),
                ('is_visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_dashboard_widget',
                'ordering': ['position_y', 'position_x'],
                'indexes': [models.Index(fields=['admin', 'is_visible'], name='admin_panel_admin_i_087046_idx')],
                'unique_together': {('admin', 'position_x', 'position_y')},
            },
        ),
        migrations.CreateModel(
            name='AdminNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('system_alert', 'System Alert'), ('security_warning', 'Security Warning'), ('payment_issue', 'Payment Issue'), ('user_report', 'User Report'), ('performance_warning', 'Performance Warning'), ('backup_status', 'Backup Status'), ('update_available', 'Update Available'), ('error_report', 'Error Report')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('critical', 'Critical')], default='normal', max_length=10)),
                ('is_global', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('is_dismissed', models.BooleanField(default=False)),
                ('action_url', models.URLField(blank=True)),
                ('action_text', models.CharField(blank=True, max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('dismissed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_notification',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read', 'created_at'], name='admin_panel_recipie_785a85_idx'), models.Index(fields=['is_global', 'is_read', 'created_at'], name='admin_panel_is_glob_830cef_idx'), models.Index(fields=['notification_type', 'priority'], name='admin_panel_notific_a6c19c_idx'), models.Index(fields=['created_at'], name='admin_panel_created_e8c906_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdminSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('security_score', models.PositiveIntegerField(default=100)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('pages_visited', models.PositiveIntegerField(default=0)),
                ('actions_performed', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_session',
                'ordering': ['-last_activity'],
                'indexes': [models.Index(fields=['admin', 'last_activity'], name='admin_panel_admin_i_969042_idx'), models.Index(fields=['session_key'], name='admin_panel_session_9dce90_idx'), models.Index(fields=['is_suspicious'], name='admin_panel_is_susp_c557c7_idx'), models.Index(fields=['created_at'], name='admin_panel_created_3ed428_idx')],
            },
        ),
        migrations.CreateModel(
            name='BackupRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('backup_type', models.CharField(choices=[('database', 'Database Backup'), ('media', 'Media Files Backup'), ('full', 'Full System Backup'), ('config', 'Configuration Backup')], max_length=20)),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('corrupted', 'Corrupted')], default='running', max_length=20)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size_mb', models.PositiveIntegerField(blank=True, null=True)),
                ('backup_duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('is_automated', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_backup_record',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['backup_type', 'status'], name='admin_panel_backup__fa294a_idx'), models.Index(fields=['created_at'], name='admin_panel_created_69983c_idx'), models.Index(fields=['is_automated'], name='admin_panel_is_auto_765cf7_idx')],
            },
        ),
        migrations.CreateModel(
            name='BulkAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('user_bulk_ban', 'Bulk User Ban'), ('user_bulk_verify', 'Bulk User Verification'), ('project_bulk_approve', 'Bulk Project Approval'), ('project_bulk_reject', 'Bulk Project Rejection'), ('payment_bulk_refund', 'Bulk Payment Refund'), ('data_bulk_export', 'Bulk Data Export'), ('email_bulk_send', 'Bulk Email Send')], max_length=30)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('partially_completed', 'Partially Completed')], default='queued', max_length=20)),
                ('total_items', models.PositiveIntegerField()),
                ('processed_items', models.PositiveIntegerField(default=0)),
                ('successful_items', models.PositiveIntegerField(default=0)),
                ('failed_items', models.PositiveIntegerField(default=0)),
                ('filters_applied', models.JSONField(default=dict)),
                ('action_parameters', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_log', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'admin_panel_bulk_action',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['admin', 'created_at'], name='admin_panel_admin_i_c30e59_idx'), models.Index(fields=['status', 'created_at'], name='admin_panel_status_81c366_idx'), models.Index(fields=['action_type'], name='admin_panel_action__29f0fa_idx')],
            },
        ),
    ]
