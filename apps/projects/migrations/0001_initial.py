# Generated by Django 5.2.3 on 2025-06-29 16:10

import django.core.validators
import django.db.models.deletion
import markdownx.models
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', markdownx.models.MarkdownxField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='projects/images/')),
                ('demo_link', models.URLField(blank=True, null=True)),
                ('project_type', models.CharField(choices=[('web_app', 'Web Application'), ('mobile_app', 'Mobile Application'), ('desktop_app', 'Desktop Application'), ('script', 'Script'), ('library', 'Library'), ('api', 'API'), ('bot', 'Bot'), ('game', 'Game'), ('other', 'Other')], max_length=20)),
                ('languages', models.CharField(help_text='Comma-separated programming languages', max_length=500)),
                ('frameworks', models.CharField(help_text='Comma-separated frameworks', max_length=500)),
                ('price_uzs', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('file', models.FileField(upload_to='projects/files/')),
                ('downloads', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3)),
                ('reviews_count', models.PositiveIntegerField(default=0)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'projects_project',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('uz', 'Uzbek'), ('en', 'English'), ('ru', 'Russian')], max_length=2)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='projects.project')),
            ],
            options={
                'db_table': 'projects_project_translation',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_uzs', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('refunded', 'Refunded'), ('disputed', 'Disputed')], default='pending', max_length=20)),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('verification_deadline', models.DateTimeField()),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='projects.project')),
            ],
            options={
                'db_table': 'projects_purchase',
            },
        ),
        migrations.CreateModel(
            name='ProjectReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('investigating', 'Under Investigation'), ('resolved_refund', 'Resolved - Refunded'), ('resolved_release', 'Resolved - Funds Released'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projects.purchase')),
            ],
            options={
                'db_table': 'projects_report',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='projects.project')),
                ('purchase', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='projects.purchase')),
            ],
            options={
                'db_table': 'projects_review',
            },
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['seller'], name='projects_pr_seller__d3482a_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_type'], name='projects_pr_project_573ce6_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['price_uzs'], name='projects_pr_price_u_b12d57_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['is_approved', 'is_active'], name='projects_pr_is_appr_b52282_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['created_at'], name='projects_pr_created_6b02e3_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['rating'], name='projects_pr_rating_c54a51_idx'),
        ),
        migrations.AddIndex(
            model_name='projecttranslation',
            index=models.Index(fields=['project', 'language'], name='projects_pr_project_326679_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='projecttranslation',
            unique_together={('project', 'language')},
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['buyer'], name='projects_pu_buyer_i_f2ce95_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['project'], name='projects_pu_project_227621_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['status'], name='projects_pu_status_ab775e_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['verification_deadline'], name='projects_pu_verific_21963a_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['created_at'], name='projects_pu_created_7dcdc9_idx'),
        ),
        migrations.AddIndex(
            model_name='projectreport',
            index=models.Index(fields=['status'], name='projects_re_status_ae939f_idx'),
        ),
        migrations.AddIndex(
            model_name='projectreport',
            index=models.Index(fields=['created_at'], name='projects_re_created_5649fa_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['project'], name='projects_re_project_23bd35_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='projects_re_rating_19bd59_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['created_at'], name='projects_re_created_f44b12_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('buyer', 'project')},
        ),
    ]
